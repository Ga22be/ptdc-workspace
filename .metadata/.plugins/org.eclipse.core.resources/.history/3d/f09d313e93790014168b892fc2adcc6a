package lab8_9;
import java.awt.Color;
import se.lth.cs.ptdc.images.ImageFilter;

/** IdentityFilter beskriver en identitetstransformation */
public class ContrastFilter extends ImageFilter {
	public ContrastFilter(String name) {
		super(name);
	}
	
	public Color[][] apply(Color[][] inPixels, double paramValue) {
		int height = inPixels.length;
		int width = inPixels[0].length;
		int lowCut = 0;
		int highCut = 255;
		int histSum = 0;
		short[][] intensity = computeIntensity(inPixels);
		int[] histogram = new int[256];
		Color[][] outPixels = new Color[height][width];
		
		for (int i = 0; i < height; i++) {
			for (int j = 0; j < width; j++) {
				histogram[intensity[i][j]]++;
			}
		}
		double cutOff = paramValue;
		double pixelCount = height*width;
		System.out.println(pixelCount);
		
		while(cutOff*pixelCount > histSum){
			System.out.println(histSum);
			histSum += histogram[lowCut++];
		}
		histSum = 0;
		while(cutOff*(height*width) > histSum){
			histSum += histogram[highCut--];
		}
		
		System.out.println(lowCut + " " + highCut);
		
		for (int i = 0; i < height; i++) {
			for (int j = 0; j < width; j++) {
				Color pixel = inPixels[i][j];			
				outPixels[i][j] = new Color(pixel.getRed(), 
										    pixel.getGreen(),
										    pixel.getBlue());
			}
		}
		return outPixels;
	}
}
